# Function for the target image

menu "4. Firmerware functions"

choice
	prompt "Primary firmware function"
	default MAINFUNCTION_SIP_PHONE

source "src/function/Kconfig.devel"

config MAINFUNCTION_SIP_PHONE
	bool "SIP phone over IPv6"
	select CODEC_G711 if !CODEC_CODEC2
	select CODEC_RTT
	select CODEC_ZRTP
	help
	  This is the customary primary function for the 0cpm firmerware.
          It implements SIP phone functionality over IPv6.  Included are
	  facilities to obtain IPv6 connectivity on all networks.

config MAINFUNCTION_SIP_DOORBELL
	bool "SIP doorbell over IPv6"
	help
	  This is an alternative primary function for the 0cpm firmerware.
	  It implements a doorbell that is switched off until a button
	  is pressed.  As soon as the device boots, it will dial out to
	  a predefined number on a predefined server.

	  This is not quite the same as a phone configured as a hotline.
	  Such a phone would always be switched on, even though normal
	  use would not include calling to the device.  So, to save
	  energy, the doorbell application assumes that a phone is
	  switched off when not in use.  The device will keep itself
	  switched on until it is done with its task.


config MAINFUNCTION_SIP_ALARMCLOCK
	bool "SIP alarm clock over IPv6"
	help
	  This is an alternate primary function for the 0cpm firmerware.
	  It implements an alarm clock that does not ring the phone,
	  but rather picks up immediately and plays whatever sound
	  is sent to it.  It is imagined that a network service would
	  wake up all those souls who have a hard time hearing a
	  rooster nearby.

	  TODO:
	  To further implement the logic of an alarm clock, use of the
	  hook contact will make it speak out the current time.  There
	  is a facility for a button that will set the alarm to go a
	  predefined number of hours after it was pressed.  You might
	  go as far as to wire that to your bed!


config MAINFUNCTION_BOOTLOADER
	bool "Bootloader"
	select FUNCTION_NETCONSOLE
	select FUNCTION_FIRMWARE_UPGRADES
	help
	  Some phones have less RAM than Flash on board.  On such phones,
	  stability improves with the installation of a small bootloader
	  that is smaller than RAM.  More in general, it helps to upgrade
	  the firmerware under tight local control.

	  The bootloader is initiated after a power cycle if (and as long as)
	  the horn is off-hook.  This is not usually the case, so normally
	  the bootloader is skipped quickly.

	  While the bootloader is active, all nonvolatile partitions are
	  made available over TFTP for reading and writing.  To aid in
	  automation, ...TODO...

	  The bootloader does not run over IPv6 or even IPv4; it is only
	  routed locally because it runs as a TFTP server directly on top
	  of 802.2 Ethernet (LLC type 1).  You will need a special TFTP
	  client to be able to access the bootloader.

	  Note that the bootloader code itself can also be replaced by
	  the bootloader.  Be very careful when doing that, as there
	  will be no warning for quite a few mistakes you could make.

endchoice

config FUNCTION_SOUND_PLAYER
	bool "Networked sound player device"
	help
	  Configure the phone as a networked sound device.  This enables
	  computers on the LAN to send sound to the phone to have it played.
	  This is only supported on an IPv6-enabled LAN.

	  The protocol to use is RTP/L16, which is a standard audio/video
	  codec intended for uncompressed sample data, just like you
	  would offer to a local sound card.

	  You can send such RTP Multicast streams with PulseAudio, using
	  the s16ne or s16be sample format.  For information on support of
	  PulseAudio in your software, see http://www.pulseaudio.org/

config FUNCTION_RADIO
	bool "Internet radio (multicast reception)"
	depends on UNIMPLEMENTED && !MAINFUNCTION_DEVEL_GPIO && !MAINFUNCTION_DEVEL_TIMER && !MAINFUNCTION_DEVEL_KEYBOARD && !MAINFUNCTION_DEVEL_NETWORK && !MAINFUNCTION_DEVEL_SOUND
	default y
	help
	  Enable Internet Radio functions.  This makes the phone pickup
	  stream announcements, and play one as selected by the user.
	  The radio function works over the speaker, and stop playing
	  during phone calls.  The radio volume can be set separately
	  from other volume settings.

	  This function is targeted at business networks, rewarding
	  them for supplying IPv6 Multicast on their LANs.  It is only
	  supported on LANs with native IPv6.  Any stream with a suitable
	  codec (like RTP/Vorbis) that is multicasted over IPv6/UDP/RTP
	  and announced with SAP can be played back by the phone.

	  You could consider finding a suitable radio station on m6bone,
	  and permitting that infrastructure to get to your LAN.  This
	  would only require you to broadcast the channel listing over
	  SAP every now and then.

	  Do not forget to select the codecs used for streaming the
	  content.

	  TODO - not implemented yet.

config FUNCTION_RADIO_CHANNELS
	int "Maximum number of channels to store"
	default 32
	help
	  The number of Internet Radio channels that are stored is
	  fixed.  You can specify a high enough upper limit to be
	  on the safe side.

config FUNCTION_NETCONSOLE
	bool "LAN-based console"
	depends on !MAINFUNCTION_DEVEL_GPIO && !MAINFUNCTION_DEVEL_TIMER && !MAINFUNCTION_DEVEL_KEYBOARD
	default y if DEVEL=n
	help
	  Direct console traffic for the main application to the network.

	  The protocol used for this network console is Logical Link Control
	  or IEEE 802.2, more to the point LLC2 which is a bit like TCP but
	  directly on top of Ethernet.  It is only accessible to directly
	  connected computers on the same LAN, so this is very suitable to
	  release console information to a LAN.

	  This console can be an add-on module for other targets, or it can
	  be selected as a development target to become the main function for
	  the image being built.  In that capacity it is a good test for the
	  network drivers.

	  This facility is normally only of use during development, but may
	  nonetheless be compiled into end-user modules.

config FUNCTION_FIRMWARE_UPGRADES
	bool "Support firmware upgrades"
	depends on !MAINFUNCTION_DEVEL_GPIO && !MAINFUNCTION_DEVEL_TIMER && !MAINFUNCTION_DEVEL_KEYBOARD && !MAINFUNCTION_DEVEL_SOUND
	default y if MAINFUNCTION_BOOTLOADER=y
	help
	  It is possible, though not strictly required, to support
	  the download and installation of new firmware.  As normal
	  IP addresses are used, this is not as safe as the upgrades
	  that are included in the dedicated bootloader main function.
	  TODO: Also use TFTP over LLC1?

	  If the upgrade fails, the phone will need to be upgraded
	  through the bootloader, if it has one.

	  Do not select this option without considering its implications.

config FUNCTION_FIRMWARE_UPGRADES_BOOTLOADER
	bool "Support bootloader upgrades (DANGEROUS)"
	depends on FUNCTION_FIRMWARE_UPGRADES
	default n
	help
	  This is a dangerous facility!

	  Complete remote control over a phone is only possible if all
	  firmware, including even its bootloader, can be upgraded from
	  a remote site.  This option enables that facility.

	  Note that this facility makes the phone rather vulnerable.
	  Anyone with access to the phone's TFTP service will be able
	  to upload new firmware to replace it.  You do want to have a
	  tightly controlled firewall to avoid this from being abused.

	  TODO: a polling TFTP client may in fact be better?

endmenu
